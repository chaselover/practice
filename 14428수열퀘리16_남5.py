"""Solution code for "BOJ 14428. 수열과 쿼리 16".

- Problem link: https://www.acmicpc.net/problem/14428
- Solution link: http://www.teferi.net/ps/problems/boj/14428

(This code was generated by Import Inliner v0.1)
"""

import sys
from typing import Callable, Iterable, TypeVar

T = TypeVar('T')


# >>>[BEGIN] teflib.segmenttree.SegmentTree [v1.2] (Copied from teflib/segmenttree.py)<<<
class SegmentTree:
    """Non-recursive segment tree supporting point update and range query."""

    def __init__(self,
                 values: Iterable[T],
                 merge: Callable[[T, T], T] = min):
        l = list(values)
        self._size = len(l)
        self._tree = l + l
        self._merge = merge
        for i in range(self._size - 1, 0, -1):
            self._tree[i] = merge(self._tree[i * 2], self._tree[i * 2 + 1])

    def update(self, pos: int, value: T):
        i = pos + self._size
        while i:
            self._tree[i] = self._merge(self._tree[i], value)
            i >>= 1

    def set(self, pos: int, value: T):
        i = pos + self._size
        while i:
            self._tree[i] = value
            value = self._merge(value, self._tree[i ^ 1])
            i >>= 1

    def query(self, beg: int, end: int) -> T:
        ret = self._tree[beg + self._size]
        l, r = beg + self._size + 1, end + self._size - 1
        while l <= r:
            if l % 2:
                ret = self._merge(self._tree[l], ret)
            if not r % 2:
                ret = self._merge(self._tree[r], ret)
            l, r = (l + 1) >> 1, (r - 1) >> 1
        return ret
# >>>[END] teflib.segmenttree.SegmentTree [v1.2]<<<


def main():
    N = int(sys.stdin.readline())
    A = [int(x) for x in sys.stdin.readline().split()]
    segtree = SegmentTree((a_i, i + 1) for i, a_i in enumerate(A))
    M = int(sys.stdin.readline())
    for i in range(M):
        query = [int(x) for x in sys.stdin.readline().split()]
        if query[0] == 1:
            _, i, v = query
            segtree.set(i - 1, (v, i))
        else:
            _, i, j = query
            print(segtree.query(i - 1, j)[1])


if __name__ == '__main__':
    main()